// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MiniApiProject.Data;

#nullable disable

namespace MiniApiProject.Migrations
{
    [DbContext(typeof(MiniApiContext))]
    [Migration("20231228154556_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MiniApiProject.Models.Interest", b =>
                {
                    b.Property<int>("InterestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InterestId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InterestId");

                    b.ToTable("Interests");
                });

            modelBuilder.Entity("MiniApiProject.Models.Interest_Person", b =>
                {
                    b.Property<int>("InterestId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("InterestId", "PersonId");

                    b.HasIndex("PersonId");

                    b.ToTable("Interest_Persons");
                });

            modelBuilder.Entity("MiniApiProject.Models.Link", b =>
                {
                    b.Property<int>("LinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LinkId"), 1L, 1);

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LinkId");

                    b.ToTable("Links");
                });

            modelBuilder.Entity("MiniApiProject.Models.Link_Interest", b =>
                {
                    b.Property<int>("LinkId")
                        .HasColumnType("int");

                    b.Property<int>("InterestId")
                        .HasColumnType("int");

                    b.HasKey("LinkId", "InterestId");

                    b.HasIndex("InterestId");

                    b.ToTable("Link_Interests");
                });

            modelBuilder.Entity("MiniApiProject.Models.Link_Person", b =>
                {
                    b.Property<int>("LinkId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("LinkId", "PersonId");

                    b.HasIndex("PersonId");

                    b.ToTable("Link_Persons");
                });

            modelBuilder.Entity("MiniApiProject.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonId"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("MiniApiProject.Models.Phone", b =>
                {
                    b.Property<int>("PhoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhoneId"), 1L, 1);

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PhoneId");

                    b.HasIndex("PersonId");

                    b.ToTable("Phones");
                });

            modelBuilder.Entity("MiniApiProject.Models.Interest_Person", b =>
                {
                    b.HasOne("MiniApiProject.Models.Interest", "Interest")
                        .WithMany("Interest_Persons")
                        .HasForeignKey("InterestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiniApiProject.Models.Person", "Person")
                        .WithMany("Interest_Persons")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Interest");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("MiniApiProject.Models.Link_Interest", b =>
                {
                    b.HasOne("MiniApiProject.Models.Interest", "interest")
                        .WithMany("Link_Interests")
                        .HasForeignKey("InterestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiniApiProject.Models.Link", "Link")
                        .WithMany("Link_Interests")
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Link");

                    b.Navigation("interest");
                });

            modelBuilder.Entity("MiniApiProject.Models.Link_Person", b =>
                {
                    b.HasOne("MiniApiProject.Models.Link", "Link")
                        .WithMany("Link_Persons")
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiniApiProject.Models.Person", "Person")
                        .WithMany("Link_Persons")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Link");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("MiniApiProject.Models.Phone", b =>
                {
                    b.HasOne("MiniApiProject.Models.Person", "Person")
                        .WithMany("Phones")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("MiniApiProject.Models.Interest", b =>
                {
                    b.Navigation("Interest_Persons");

                    b.Navigation("Link_Interests");
                });

            modelBuilder.Entity("MiniApiProject.Models.Link", b =>
                {
                    b.Navigation("Link_Interests");

                    b.Navigation("Link_Persons");
                });

            modelBuilder.Entity("MiniApiProject.Models.Person", b =>
                {
                    b.Navigation("Interest_Persons");

                    b.Navigation("Link_Persons");

                    b.Navigation("Phones");
                });
#pragma warning restore 612, 618
        }
    }
}
